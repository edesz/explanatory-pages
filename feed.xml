<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://edesz.github.io/explanatory-pages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://edesz.github.io/explanatory-pages/" rel="alternate" type="text/html" /><updated>2021-09-28T23:43:30-05:00</updated><id>https://edesz.github.io/explanatory-pages/feed.xml</id><title type="html">Exploratory Data Analysis</title><subtitle>Data Analysis and Techniques.</subtitle><entry><title type="html">Using Machine Learning to Build a Car Price Predictor</title><link href="https://edesz.github.io/explanatory-pages/end-to-end-ml-development-project/web-scraping/exploratory-data-analysis/project/machine-learning/2020/12/11/cpp.html" rel="alternate" type="text/html" title="Using Machine Learning to Build a Car Price Predictor" /><published>2020-12-11T00:00:00-06:00</published><updated>2020-12-11T00:00:00-06:00</updated><id>https://edesz.github.io/explanatory-pages/end-to-end-ml-development-project/web-scraping/exploratory-data-analysis/project/machine-learning/2020/12/11/cpp</id><content type="html" xml:base="https://edesz.github.io/explanatory-pages/end-to-end-ml-development-project/web-scraping/exploratory-data-analysis/project/machine-learning/2020/12/11/cpp.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-12-11-cpp.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Background&quot;&gt;Background&lt;a class=&quot;anchor-link&quot; href=&quot;#Background&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The hypothetical client is in the car-loan financing business and targets customers looking to purchase a vehicle from the emarketplace cars.com. The client only serves two US cities - Austin, TX and Seattle, WA - and immediately surrounding areas (within a 20 mile range of a highly populated zip code in each city - &lt;a href=&quot;http://localistica.com/usa/tx/zipcodes/most-populated-zipcodes/&quot;&gt;78745 in Austin&lt;/a&gt; and &lt;a href=&quot;http://localistica.com/usa/wa/zipcodes/most-populated-zipcodes/&quot;&gt;99208 and 99052 in Seattle&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Currently a financing package is developed using in-house business rules taking into account listing attributes such as exterior styling, transmission speed, tank capacity, etc. These factors are used to approximate a listing price. Even through cars.com lists a price, the client needs their own approximation since it is their financing that will be offered to the customer. At present, the client focuses on new-vehicle financing only, up to a price of &lt;code&gt;$&lt;/code&gt;45,000, and so wants to market itself as a competitor to cars.com for financing listings on that platform.&lt;/p&gt;
&lt;h3 id=&quot;Motivation&quot;&gt;Motivation&lt;a class=&quot;anchor-link&quot; href=&quot;#Motivation&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The client develops an estimate of the value (price) of the listing and develops a financing package based on this price, using knowledge of the field. Based on this package, the client decides if they want to proceed with the purchase. If so, they'll buy the car from cars.com but take the financing package from our client and cover the difference in estimated and true price themselves.&lt;/p&gt;
&lt;p&gt;The client has noticed that customers are more aggressively re-negotiating financing terms for listings whose prices are under-estimated. This results in them (client) needing to re-structure the financing and make a more generous offer than warranted in order to keep the prospective customer happy and willing to proceed with purchase through them rather than through a competitor. This re-structuring represents a loss to the client. It is also required for over-estimated prices but, with less pressure from the customer, a more reasonable re-structuring is possible without incurring such a heavy loss.&lt;/p&gt;
&lt;p&gt;So, the client wants to explore the use of ML to cut down on their re-structuring losses. They hope the result is fewer under-predicted prices thereby cutting their re-structuring losses. As factors important to predicting the price are currently used to develop a financing package, the client wants the ML price prediction service to return interpretable predictors. To this end, they are on the lookout for a ML-based pricing service to (a) estimate car listing prices and (b) use the factors identified as being important predictors of the price to build their financing package. If they find a suitable service, they will replace all in-house business rule-based pricing with the ML-based approach.&lt;/p&gt;
&lt;h3 id=&quot;Costs-Involved&quot;&gt;Costs Involved&lt;a class=&quot;anchor-link&quot; href=&quot;#Costs-Involved&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;From historical experience in dealing with customers, the client has observed that the re-structuring problem appears when the client's estimated price is different from the true price by more than &lt;code&gt;$&lt;/code&gt;5,000. So, they are willing to pay 15% of the true price for predictions within the acceptable (tolerable) range of &lt;code&gt;$&lt;/code&gt;5,000 above or below the true price. However, they will charge the pricing service for intolerable errors (larger than &lt;code&gt;$&lt;/code&gt;5,000) as explained above - 40% for intolerable under- and 10% for intolerable over-predictions of the price.&lt;/p&gt;
&lt;h3 id=&quot;Objective&quot;&gt;Objective&lt;a class=&quot;anchor-link&quot; href=&quot;#Objective&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This project develops a first version of such an ML based service and estimates the return earned (or lost) from developing an ML-based listing pricing service to make predictions on listings from cars.com. The focus is on using the Python programming language for the ML development workflow covering data acquisition to generatiion of price predictions. Deploying the developed ML model is out of scope for this prototype project.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Acquiring-Data-from-cars.com&quot;&gt;Acquiring Data from cars.com&lt;a class=&quot;anchor-link&quot; href=&quot;#Acquiring-Data-from-cars.com&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When retrieving listings for data from cars.com, the following search field values were submitted&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;type of car (click on required item in dropdown menu) was set to &quot;New&quot;&lt;/li&gt;
&lt;li&gt;Make (click on required item in dropdown menu) and select All Makes&lt;/li&gt;
&lt;li&gt;maximum acceptable price (click on required item in dropdown menu) and specify a budget of &lt;code&gt;$&lt;/code&gt;45,000&lt;/li&gt;
&lt;li&gt;zip code is set to the zip codes of interest (78745, 99208, 99052)&lt;/li&gt;
&lt;li&gt;radius can left at the default value of 20 miles as required&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From the results, the listing IDs were scraped from the cars.com homepage. These are the IDs for listings whose details are to be retrieved. This ID will be used to assemble the web url of each listing. A smaller number of pages of results were available for the two zip codes in Seattle. From the assembled web urls, 29 pages worth of listings (100 listings per page) were scraped for Austin and 22 pages were scraped for Seattle. Scraping was done using the &lt;code&gt;bs4&lt;/code&gt;) library and &lt;a href=&quot;https://en.wikipedia.org/wiki/Selenium_(software&quot;&gt;Selenium web testing&lt;/a&gt;) framework.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Cleaning-Data&quot;&gt;Cleaning Data&lt;a class=&quot;anchor-link&quot; href=&quot;#Cleaning-Data&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The following steps were followed to clean the data in the individual columns of raw data scraped from cars.com&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Any rows without a listing title were dropped.&lt;/li&gt;
&lt;li&gt;The tank volume column was cleaned by removing the units (&lt;code&gt;L&lt;/code&gt;) and change the column from a string to a float, as volumes are not necessarily integers.&lt;/li&gt;
&lt;li&gt;The year was extracted from the title, as an integer.&lt;/li&gt;
&lt;li&gt;The make and model were split out of a combined column, into separate string columns.&lt;/li&gt;
&lt;li&gt;The city and state were extracted from the listing address.&lt;/li&gt;
&lt;li&gt;Transmission speed was extracted from the &lt;code&gt;Transmission&lt;/code&gt; column.&lt;/li&gt;
&lt;li&gt;The comma from &lt;code&gt;Mileage&lt;/code&gt; was removed allowing it to be used as a numeric feature.&lt;/li&gt;
&lt;li&gt;Highway and City MPG (Miles Per Gallon) were combined into a single MPG column.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Overall-Division-of-Data-for-ML-Model-Development&quot;&gt;Overall Division of Data for ML Model Development&lt;a class=&quot;anchor-link&quot; href=&quot;#Overall-Division-of-Data-for-ML-Model-Development&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;After the full dataset was scraped and cleaned, it was time to go through the ML development workflow. Before starting this, the data was split into an overall training and testing split, following an 80%-20% division. This overall training data (80% of overall data) was used to train the ML model. After this was completed, the unseen 20% of the data (the testing data) was only used for evaluating the performance on the trained ML model. If the test set was used to score the ML model's predictions, then the ML model might learn its best parameters based exclusively on the testing data and would not generalize well to out-of-sample (or unseen) data.&lt;/p&gt;
&lt;p&gt;In order to avoid this &lt;em&gt;learning of the test split&lt;/em&gt;, the test split was set aside to be treated as the unseen data and the overall training split was further sub-divided into a smaller training and validation split - in a simple workflow, the ML model is trained using this smaller training split and then scored on the validation split. After several iterations of ML model training, the best model is selected and then trained on the overall training split. It is then used only once to make and score predictions on the overall test split, which has not been seen thus far in the workflow.&lt;/p&gt;
&lt;p&gt;During ML model development, training data (or training split, or training set) will refer to the smaller training data. During model evaluation, training data will refer to the overall training data.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Exploratory-Data-Analysis-and-Filtering&quot;&gt;Exploratory Data Analysis and Filtering&lt;a class=&quot;anchor-link&quot; href=&quot;#Exploratory-Data-Analysis-and-Filtering&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Target-Distribution&quot;&gt;Target Distribution&lt;a class=&quot;anchor-link&quot; href=&quot;#Target-Distribution&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The dependent variable here is the regression target or the listing price. The distribution of this column from the data (varible) is shown below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/target_histogram__20201211-134258.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Since the target is a continuous variable, we would expect its histogram to follow a normal distribution, possibly with a few outliers on the low (left) or high (right) end of a bell-shaped curve. Although this observed target distribution for the overall training data is generally shaped similar to a normal distribution, it displays a (higher) tailing and a broader width for than expected.&lt;/p&gt;
&lt;p&gt;A weak bimodal feature is present in the distribution. It was found that this was attributed more strongly to listings from the state of Texas than from Washington State. While we could filter the overall training data based to remove the bimodal feature, this would run the risk of introducing selection bias since we don't know the distribution of the test set or, more importantly, the distribution of data to be used for inference (if such a model were to be considered in a tool put into production).&lt;/p&gt;
&lt;p&gt;So, for this iteration of the analysis, the raw &lt;code&gt;price&lt;/code&gt; target data, and its not quite normally distributed values, was used. This could also be further investigated by scraping more data to determine if the two apparent peaks can be more clearly separated.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Feature-Exploration-(brief)-and-Filtering-Outliers&quot;&gt;Feature Exploration (brief) and Filtering Outliers&lt;a class=&quot;anchor-link&quot; href=&quot;#Feature-Exploration-(brief)-and-Filtering-Outliers&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We'll first de-select rows where the numerical feature &lt;code&gt;per_month_min&lt;/code&gt; is zero. These correspond to listings where the monthly payment is listed as zero dollars. It is clear that the per_month_min financing option is determined from the listing price. So, is a perfect correlation to price.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Numerical-Features&quot;&gt;Numerical Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Numerical-Features&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;It was found that  only one of the scraped numerical feature, namely &lt;code&gt;MPG&lt;/code&gt; (miles per gallon), was reasonably linear in its relationship to the listing price. This feature required filtering to remove outliers above approx. 120 MPG and improve the linear relationship between &lt;code&gt;MPG&lt;/code&gt; and the &lt;code&gt;price&lt;/code&gt; column. This will be especially helpful as the other numerical features do not show a linear trend, a requirement for a linear regression model. It seems likely that at best, they'll be weak predictors of the price.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/multi_feature_plot.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Categorical-Features&quot;&gt;Categorical Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Categorical-Features&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In order to visualize the influence of categorical features, the strongest independent variable (&lt;code&gt;MPG&lt;/code&gt;) is plotted against the listing price and grouped by each of these features separately, as shown below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/single_feature_plot.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;From the drivetrain plot, we can see that 4WD (top-left) and FWD (bottom-right) listings are almost separated by AWD. RWD also generally plots distinctly. A weaker, but still present, separation is seen for transmission speed, where 6-speed listings show some separation from the other options.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;If filtering &lt;code&gt;MPG&lt;/code&gt; by 80 MPG, we would notably separately give up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all &lt;code&gt;Hybrid&lt;/code&gt; and &lt;code&gt;Electric&lt;/code&gt; (&lt;code&gt;Fuel Type&lt;/code&gt;) vehicles&lt;ul&gt;
&lt;li&gt;in particular, the electric vehicles, which plot distinctly from the other types in the data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;some &lt;code&gt;1&lt;/code&gt; (single)-speed transmission cars&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, we're losing these as factors to explain price in the ML model while improving the shape of the relationship between MPG and listing price. This is an acceptable tradeoff since there aren't many electric vehicles in the data and some single-speed listings remain after the filter is applied.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Summary-of-Applied-Filters&quot;&gt;Summary of Applied Filters&lt;a class=&quot;anchor-link&quot; href=&quot;#Summary-of-Applied-Filters&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The following filters were applied to the data to remove outliers&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;remove listings with greater than 120 MPG because there are only very few of these in the retrieved data and they introduce non-linearity in this feature which is the (visually) strongest predictor of price&lt;/li&gt;
&lt;li&gt;remove listings with Mileage greater than 20 miles on the odometer&lt;/li&gt;
&lt;li&gt;remove listings with fewer consumer reviews than 200 consumer reviews&lt;/li&gt;
&lt;li&gt;remove listings with fewer seller reviews than 1,200 consumer reviews&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Feature-Pre-Processing-and-Selection&quot;&gt;Feature Pre-Processing and Selection&lt;a class=&quot;anchor-link&quot; href=&quot;#Feature-Pre-Processing-and-Selection&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Feature-Selection---Remove-Collinear-Features&quot;&gt;Feature Selection - Remove Collinear Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Feature-Selection---Remove-Collinear-Features&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Feature and polynomial interactions were computed from these numerical features. In order to avoid the problem of multi-collinearity between features of a ML model, thereby preserving interpretability of the ML model's coefficients, the interaction and polynomial terms could not be used. Below are heatmaps of inter-feature and feature-target correlations with (top) and without (bottom) interaction and polynomial terms&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/corr_heatmap__20201210-213628.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/corr_heatmap__20201210-213629.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;These heatmaps show why such terms were not be used here. There was a fifth scraped numerical feature - tank volume - but this was strongly correlated to MPG and so only one of these could be retained. It was decided to keep MPG and so tank volume was dropped.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Pre-Processing---Transforming-Continuous-Features&quot;&gt;Pre-Processing - Transforming Continuous Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Pre-Processing---Transforming-Continuous-Features&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Numerical features were transformed, to allow for a better fitting linear model. Linear models assume that continuous features follow a Gaussian (bell curved) distribution and the absence of this shape can make ML modeling challenging. From exploring the data, the strongest linear relationship to the price was found to be the Miles Per Gallon (&lt;code&gt;MPG&lt;/code&gt;) variable, whose distribution is shown below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/single_feature_multi_transformations__20201211-134259.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;This feature is the combination of Highway MPG and City MPG. It is not a perfect Gaussian in shape. Several feature transformations were individually used to trye to improve this, and are shown in the graph. They were &lt;a href=&quot;https://www.jstor.org/stable/2673623?seq=1&quot;&gt;Yeo-Johnson&lt;/a&gt;, &lt;a href=&quot;https://rss.onlinelibrary.wiley.com/doi/10.1111/j.2517-6161.1964.tb00553.x&quot;&gt;Box-Cox&lt;/a&gt;, log-scaling and Quantile (mapping the probability distribution of a variable that of another distribution) transformations. Transformations do improve the shape of this feature's distribution. So, it was worth comparing different transformation types for this feature to see how they help in scoring predictions on data not seen during training of the ML model. This is the first step in the ML pipeline.&lt;/p&gt;
&lt;p&gt;Of the four numerical features available in the scraped data, the other three variables used here displayed a non-Gaussian like distribution and so they were similarly transformed before quantitative ML modeling.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Pre-Processing---Standardize-Continuous-Features&quot;&gt;Pre-Processing - Standardize Continuous Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Pre-Processing---Standardize-Continuous-Features&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The next step was to standardize and &lt;a href=&quot;https://en.wikipedia.org/wiki/Dummy_variable_(statistics&quot;&gt;one-hot encode&lt;/a&gt;#cite&lt;em&gt;note-G&lt;/em&gt;&amp;amp;_S-1) numerical and categorical features respectively. &lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_scaling&quot;&gt;Scaling is required for some ML models in order that&lt;/a&gt; the scale of different features does not affect the ML model. Linear models do not require features to be scaled. The type of scaling used here was standardization which transforms a variable such that it has a mean of 0 and a standard deviation of 1.i.e. subtracting the mean from the variable and dividing by the standard deviation.&lt;/p&gt;
&lt;p&gt;With the exception of &lt;code&gt;MPG&lt;/code&gt;, the other three numerical features were not close enough to a Gaussian distribution (a requirement of standardization), even after transformation. However, since only four numerical features were available, and since we're building a regression ML model here, these three features were retained in this iteration of model development.&lt;/p&gt;
&lt;p&gt;This was the second step of the pipeline.&lt;/p&gt;
&lt;h3 id=&quot;Feature-Selection----Categoricals&quot;&gt;Feature Selection  - Categoricals&lt;a class=&quot;anchor-link&quot; href=&quot;#Feature-Selection----Categoricals&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;There were a total of 15 categorical features available. By sequentially adding one feature at a time and comparing the scores from the pipeline's predictions, the best performing set of categorical features were selected. This was the third step in the pipeline. This step changed depending on the number of categorical features included for assessment.&lt;/p&gt;
&lt;h3 id=&quot;Missing-Data&quot;&gt;Missing Data&lt;a class=&quot;anchor-link&quot; href=&quot;#Missing-Data&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The next step was to drop any rows with missing data for the current iteration of the ML model.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Linear-Regression-Models&quot;&gt;Linear Regression Models&lt;a class=&quot;anchor-link&quot; href=&quot;#Linear-Regression-Models&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The next step of the pipeline was selecting and training a linear regression model training with hyper-parameter optimization. Only one family of regression models was used - linear models. Four linear models were compared - standard &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_regression&quot;&gt;Linear Regression&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Tikhonov_regularization&quot;&gt;Ridge Regression&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Lasso_(statistics&quot;&gt;Lasso Regression&lt;/a&gt;) and &lt;a href=&quot;https://en.wikipedia.org/wiki/Elastic_net_regularization&quot;&gt;Elastic Net regularization&lt;/a&gt;. The last three of these involves applying a penalty to&lt;/p&gt;
&lt;p&gt;For the regression models that used it, the amount of regularization was tuned using the repeated 5-fold cross-validation procedure described above.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;ML-Pipeline-Comparison&quot;&gt;ML Pipeline Comparison&lt;a class=&quot;anchor-link&quot; href=&quot;#ML-Pipeline-Comparison&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The scoring of ML pipeline predictions mentioned above was done using &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-validation_(statistics&quot;&gt;5-fold Cross-Validation&lt;/a&gt;#k-fold_cross-validation), with five repeats Five cross-validation folds were generated - these are different two-way divisions of the overall training data into a training split and a validation split. The pipeline was trained on each fold's training split, and then used to make predictions on the corresponding testing split. This was repeated five times per 5-fold cross-validation. This process was repeated five times, with different divisions created pre repetition. The predictions were scored against the true values of the car price using the RMSE metric, as mentioned above. The stability of ML model coefficients was also compared to ensure that these values did not change dramatically as transformations and/or features were added.&lt;/p&gt;
&lt;p&gt;Multiple pipelines with all of the above steps were run. First, they were run to pick the best set of transformations for numerical features. Then they were run (with a fixed set of transformed numerical features) to choose the best set of categorical features. Each time hyperparameters were tuned, as one of the pipeline steps. The pipeline with the best set of categoricals (with a fixed set of transformed numericals) was used as the final pipeline for ML model evaluation on the testing data.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Results-of-Selecting-the-Best-Pipeline&quot;&gt;Results of Selecting the Best Pipeline&lt;a class=&quot;anchor-link&quot; href=&quot;#Results-of-Selecting-the-Best-Pipeline&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Using only the small number of available numerical (continuous) features, the best RMSE found was approximately &lt;code&gt;$&lt;/code&gt;6,000. This means the best ML model could predict listing price within &lt;code&gt;$&lt;/code&gt;6,000 of the true value, which is larger than the threshold of &lt;code&gt;$&lt;/code&gt;5,000 set out by the client for this pricing service. With this in mind, categorical features were added and the scoring metric (RMSE) improved to approx. &lt;code&gt;$&lt;/code&gt;4,800, which is now within the required threshold.&lt;/p&gt;
&lt;p&gt;The best pipeline was comprised of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;four numerical features being transformed using the Yeo-Johnson transformation and then standardized&lt;/li&gt;
&lt;li&gt;eight of the 15 categorical features being selected and then one-hot encoded&lt;ul&gt;
&lt;li&gt;after encoding, approximately 35 categorical features were generated, in combination with the four numerical features&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ridge Regression ML model with tuned penalty hyper-parameter&lt;ul&gt;
&lt;li&gt;Ridge was chosen over Lasso and Elastic Net, although scores from these two approaches were very similar to the Ridge approach. The Linear Regression model coefficients and scores were unstable and occassionally returned very large values. For this reason, it was not used.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Interpreting-the-ML-Model's-Predictions&quot;&gt;Interpreting the ML Model's Predictions&lt;a class=&quot;anchor-link&quot; href=&quot;#Interpreting-the-ML-Model's-Predictions&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;For subsequent sections, the best ML pipeline found above will be referred to as the ML model.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We'll take a look at the car features that were found to be the most important to the ML model's predictors on unseen data. Below are the ML model's coefficients, followed by the permutation importances&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/coefs__20201210-213631.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/bar_box_plot_train.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/bar_box_plot_test.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The larger the magnitude of the feature's coefficient or permutation importance, the greater the importance of that feature to the ML model's predicted listing price.&lt;/p&gt;
&lt;p&gt;Not surprisingly, the Miles Per Gallon is found to be the most dominant value-add variable to the ML model on both data it had and had not seen before. The correlation between the price and miles per gallon (also a continuous variable) was seen earlier, so we'd expect the model to draw on this relationship when making predictions.&lt;/p&gt;
&lt;p&gt;Another feature which showed up frequently as a value add and detractor to the listing price was the transmission speed. Recalling the exploratory data analysis section, and recalling that single-speed and Automatic transmission cars were generally separated from the other transmission types, we see that the ML model has unsurprisingly indicated that this to be an important factor in predicting the car's sale price.&lt;/p&gt;
&lt;p&gt;Very similar observations to those for transmission speed can be made for Drive Train - another strong predictor of car price. There is delineaetion between the categories within this feature on the plot of Price against Miles Peg Gallon.&lt;/p&gt;
&lt;p&gt;Across both ML model coefficient importance and feature permutation importance, interior design features prominently. We can think of this as follows: people are going to interact more with the inside of the car than the outside. If people only see the outside of the car, most won't want to pay as much because their opinion will change once they have seen the inside. The quality of the material used on the seats, the dashboard, floor mats, central console organizer - relatively speaking, these are far more frequently encountered by an owner during daily use than the style of the exterior of the car. Now, if these were all luxury cars, then this reasoning could change.&lt;/p&gt;
&lt;p&gt;These features mentioned above drop in their relative predictive power for incorrect predictions (those that are outside our acceptable threshold), but still remain among the strongest predictors of the listing price. This further points to their importance to the ML model's predictions of car price.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Prediction-Errors&quot;&gt;Prediction Errors&lt;a class=&quot;anchor-link&quot; href=&quot;#Prediction-Errors&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Predicted-Compared-to-True-Price&quot;&gt;Predicted Compared to True Price&lt;a class=&quot;anchor-link&quot; href=&quot;#Predicted-Compared-to-True-Price&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The best ML model's prediction error is shown below - this is the predicted price plotted against the observed price&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/yb_pred_error__20201211-134328.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The model generally over-predicts lower priced listings and under-predicts higher priced ones. As mentioned earlier, the client placed a higher penalty on the incorrect and under-predicted listings and it is not surprising that this ML model's performance results in us making a loss on unseen data. This observation from the prediction error plot suggests that the effect of the variables scraped from cars.com on the listing price is not intrinsically linear. This was also noted during the exploratory data analysis section where the miles per gallon was found to be the sole continuous variable with a clear linear relationship to the listing price. Further, the majority of features are categorical and not continuous. Linear regression ML models depend on such numerical, or continuous, features to anchor their ability to make predictions.&lt;/p&gt;
&lt;p&gt;In order to deal with these listings, it may be necessary to extract additional features from the scraped data, perhaps from the unused text columns (the text of the customer reviews, or the description of the listing, etc.) or assign sub-groups to some of the high-cardinality features that were excluded such as Interior or Exterior Color, Model, etc. We could also move to a non-linear regression model and indeed, as was seen from the ML model's learning curves, a tree-based ensemble model was found to improve (reduce) the error in the predictions. If we could retrieve the date or month of the year, we could also consider including a broad market indicator such as gas price or &lt;a href=&quot;https://fred.stlouisfed.org/series/TERMCBPER24NS&quot;&gt;personal loan interest rate, from the US Federal Reserve St. Louis&lt;/a&gt; as an approximate surrogate for asset valuation.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Difference-between-Predicted-and-True-Price&quot;&gt;Difference between Predicted and True Price&lt;a class=&quot;anchor-link&quot; href=&quot;#Difference-between-Predicted-and-True-Price&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The ML model's prediction residual (the difference between predicted and true price in unseen test data) is shown below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/multi_histograms__20201210-213633.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;While generally both display the expected Gaussian profile, the test set (unseen during ML model training) produced higher-than-expected under-prediction errors in the &lt;code&gt;$&lt;/code&gt;5,000-&lt;code&gt;$&lt;/code&gt;10,000 range. While this effect is seen for the overall training data, accounting for the wider-than-&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_function#/media/File:Normal_Distribution_PDF.svg&quot;&gt;expected tailing&lt;/a&gt; observed, the residual is higher in this range for the testing data. As mentioned earlier, these under-predicted errors are the more strongly penalized errors by the client and will contribute negative returns when deploying this ML model as part of a car pricing service.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Plotting the ML model's prediction residual by state showed no eviden pattern (see below), which is re-assuring since the client is targeting customers in the vicinity of two cities, as shown below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/explanatory-pages/images/copied_from_nb/cpp/Residuals ($)_by_Predicted Value__20201211-134325.png&quot; alt=&quot;Drawing&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;div class=&quot;flash flash-error&quot;&gt;
    &lt;svg class=&quot;octicon octicon-alert&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;strong&gt;Warning: &lt;/strong&gt;if, during the eploratory data anlysis, we observed a strong enough difference, then developing a separate ML model per state might have been warranted
&lt;/div&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Cost-of-ML-model's-prediction-errors&quot;&gt;Cost of ML model's prediction errors&lt;a class=&quot;anchor-link&quot; href=&quot;#Cost-of-ML-model's-prediction-errors&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;With the model exhibiting acceptable performance, a last step in the ML development for this project was to estimate the cost we would incur by putting this model into production as part of the aforementioned pricing service. To do this, it was necessary to estimate to financial cost of prediction errors made by the model.&lt;/p&gt;
&lt;h3 id=&quot;In-Range-predictions&quot;&gt;In-Range predictions&lt;a class=&quot;anchor-link&quot; href=&quot;#In-Range-predictions&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;It is possible that the model could make a prediction within the range of &lt;code&gt;$&lt;/code&gt;5,000 above or below the true price of the listing. This satisfies the client's requirements and we earn a return from them for every prediction made that falls in this tolerable range. However, if the predictions are outside this range, then the two resulting errors are not equal in the eyes of the client. They'll be using these predictions as part of their financing service and the options they offer their customers change based on whether the predicted listing price is over-estimated or under-estimated.&lt;/p&gt;
&lt;h3 id=&quot;Unequal-cost-of-errors&quot;&gt;Unequal cost of errors&lt;a class=&quot;anchor-link&quot; href=&quot;#Unequal-cost-of-errors&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A customer would prefer that the true cost of a car they want to purchase be over-predicted (meaning they would have to pay less, when eventually purchasing) than under-predicted (they have to pay an additional amount when purchasing). However, the client has prepared a financing offer based on the predicted price. If this is different from the true price, then this offer has to eventually change when the custome contacts them looking to proceed with the purchase. How this financing package changes depends on whether the true price is under- or over-predicted by our ML price predition model.&lt;/p&gt;
&lt;p&gt;With an under-prediction, the customer has to pay more and then re-negotiates the financing with our client, possibly getting a better deal.i.e. our client has to make a more generous offer than initially planned in order to keep their customer happy and proceed with the purchase. So, they will penalize us more for such under-predictions than for our ML model's over-predictions.&lt;/p&gt;
&lt;h3 id=&quot;Assumed-penalty-structure&quot;&gt;Assumed penalty structure&lt;a class=&quot;anchor-link&quot; href=&quot;#Assumed-penalty-structure&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following assumptions are made about these penalties for predictions outside the tolerable range&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;under-predictions cost us 40%  of the difference between predicted and true price&lt;/li&gt;
&lt;li&gt;over-predictions cost us 15% of the difference&lt;/li&gt;
&lt;li&gt;for in-range predictions, we earn 10% of the true price of the listing&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Estimated-Cost&quot;&gt;Estimated Cost&lt;a class=&quot;anchor-link&quot; href=&quot;#Estimated-Cost&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;With the above penalty structure in place, we can approximate our (gross) return on the ML model's predictions (GR) in production using&lt;/p&gt;
&lt;p&gt;GR = ( P&lt;sub&gt;U&lt;/sub&gt; X R ) + ( P&lt;sub&gt;O&lt;/sub&gt; X R ) + ( E&lt;sub&gt;IR&lt;/sub&gt; X R )&lt;/p&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R = y&lt;sub&gt;P&lt;/sub&gt; - y&lt;sub&gt;T&lt;/sub&gt; is the difference between predicted (y&lt;sub&gt;P&lt;/sub&gt;) and true (y&lt;sub&gt;T&lt;/sub&gt;) price&lt;/li&gt;
&lt;li&gt;P&lt;sub&gt;U&lt;/sub&gt; is the penalty for under-prediction (-40%)&lt;/li&gt;
&lt;li&gt;P&lt;sub&gt;O&lt;/sub&gt; is the penalty for over-prediction (-15%)&lt;/li&gt;
&lt;li&gt;E&lt;sub&gt;IR&lt;/sub&gt; is the earning (reward) for in-range prediction (+10%)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using this equation, we can estimate our return on each prediction in the test set (unseen data). We can also calculate the median return per listing prediction and the total return over all the predictions made.&lt;/p&gt;
&lt;p&gt;With 78 wrong under-predictions, 61 wrong over-predictions and the remaining as in-range (tolerable) predictions on the unseen data, the median return was estimated to be a loss of &lt;code&gt;$&lt;/code&gt;1,240 per listing and the total return was estimated to be a loss of &lt;code&gt;$&lt;/code&gt;77,000.&lt;/p&gt;
&lt;p&gt;If we did not use an ML-based approach, then we could have offered a pricing service where we simply guessed that the price of every new listing (in the test set) would be the average (mean) of the prices in the overall training data. Using this naive strategy, our median return is estimated to be a loss of &lt;code&gt;$&lt;/code&gt;1,960 per listing and an overall loss of &lt;code&gt;$&lt;/code&gt;271,406 is incurred. Similarly, we could have used a different strategy where we replaced the mean of the training data prices by the median of the prices. Below is a summary of the costs incurred by the ML-based and these two naive approaches&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;details class=&quot;description&quot;&gt;
      &lt;summary class=&quot;btn btn-sm&quot; data-open=&quot;Hide Code&quot; data-close=&quot;Show Code&quot;&gt;&lt;/summary&gt;
        &lt;p&gt;&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;median ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1241&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sum ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77_520&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;median ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2089&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sum ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;291_604&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;median ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1961&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sum ($)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;271_407&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ML&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Naive_Median&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Naive_Mean&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{:,.0f}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_caption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;Returns from ML-based Pricing Service&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
    &lt;/details&gt;
&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;/style&gt;&lt;table id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72&quot;&gt;&lt;caption&gt;Returns from ML-based Pricing Service&lt;/caption&gt;&lt;thead&gt;    &lt;tr&gt;        &lt;th class=&quot;blank level0&quot;&gt;&lt;/th&gt;        &lt;th class=&quot;col_heading level0 col0&quot;&gt;median ($)&lt;/th&gt;        &lt;th class=&quot;col_heading level0 col1&quot;&gt;sum ($)&lt;/th&gt;    &lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;
                &lt;tr&gt;
                        &lt;th id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72level0_row0&quot; class=&quot;row_heading level0 row0&quot;&gt;ML&lt;/th&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row0_col0&quot; class=&quot;data row0 col0&quot;&gt;-1,241&lt;/td&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row0_col1&quot; class=&quot;data row0 col1&quot;&gt;-77,520&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                        &lt;th id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72level0_row1&quot; class=&quot;row_heading level0 row1&quot;&gt;Naive_Median&lt;/th&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row1_col0&quot; class=&quot;data row1 col0&quot;&gt;-2,089&lt;/td&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row1_col1&quot; class=&quot;data row1 col1&quot;&gt;-291,604&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                        &lt;th id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72level0_row2&quot; class=&quot;row_heading level0 row2&quot;&gt;Naive_Mean&lt;/th&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row2_col0&quot; class=&quot;data row2 col0&quot;&gt;-1,961&lt;/td&gt;
                        &lt;td id=&quot;T_3efdd350_3c1c_11eb_905c_9d2d696d3a72row2_col1&quot; class=&quot;data row2 col1&quot;&gt;-271,407&lt;/td&gt;
            &lt;/tr&gt;
    &lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;where the &lt;code&gt;median&lt;/code&gt; column is the median return per price prediction made by our ML model (first row) or naive approaches (second and third rows). The &lt;code&gt;sum&lt;/code&gt; column is the total return over all predictions made.&lt;/p&gt;
&lt;p&gt;Although we are saving by developing an ML-model to make these predictions, rather than naive guessing, the current performance of the ML model will nonetheless result in an overall loss. The penalty assigned to the ML model's over- or under-estimations is the dominant factor. There are approx. 38% under-predictions outside the client's tolerable range and this dominates the reward for the approx. 62% tolerable under-predictions. Similarly, the penalty assigned to 28% of wrong over-predictions are dominating the 72% tolerable over-predictions.&lt;/p&gt;
&lt;p&gt;All of this isn't surprising. The ML model is performant enough to just meet the required RMSE threshold of &lt;code&gt;$&lt;/code&gt;5,000. Improving this level of performance will help to reduce incurred costs and maybe even earn a return. At present, this isn't the case. Also, it is worth noting that this estimation of return, using the costs for each type of error, is just that - an estimate. The true monetary cost penalties assigned could be more complicated. For example, the cost of acquiring data, training a ML model to achieve even the current level of performance and then monitoring a ML model in production have not been accounted for. Notwithstanding any added practical complexities, analogous principles to those illustrated here are likely to be relevant in practice.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;Conclusion&lt;a class=&quot;anchor-link&quot; href=&quot;#Conclusion&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;After filtering to remove outliers from listings scraped from cars.com (where the max. prices is capped at &lt;code&gt;$&lt;/code&gt;45,000), selecting features and choosing between four types of linear regression models, the best ML model was trained on approx. 1,800 listings from cars.com and made 428 predictions on data not seen during ML model development. The best ML model here returns an RMSE, on the predictions, of approx. &lt;code&gt;$&lt;/code&gt;4,900 (R&lt;sup&gt;2&lt;/sup&gt; = 0.61). This meets the goal for this project. The factors most important to the model;s ability to predict unseen data are MPG, Drivetrain, Transmission Speed and Interior design, the latter three of which are categorical features.&lt;/p&gt;
&lt;p&gt;However, if the best linear ML model found here is deployed as part of a price prediction service to make these predictions on unseen data, then offering such a service will cost us (rather than generate returns) due to the heavily penalized under-predicted prices at the current level of performance.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Looking-Ahead&quot;&gt;Looking Ahead&lt;a class=&quot;anchor-link&quot; href=&quot;#Looking-Ahead&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;There are several next steps that can be followed in order to attempt at improving the current ML model performance. A few options related to the feature engineering might warrant consideration.&lt;/p&gt;
&lt;p&gt;A logical starting point is to look into improving results on the worst under-predicted listings. These were predominantly from WA state and were priced above the price of listings used to train the ML model. Adding a market indicator as a proxy for asset valuation could be explored to account for the pattern of these errors in relation to listing price. Additng demographic data that separates the two states, in the vicinity of the client's targeted cities, could be explored to account for the dependence on the state.&lt;/p&gt;
&lt;p&gt;A few high-cardinality categorical features were left out. These could be aggregated so that infrequently occurring categories are binned together. This could help reduce the cardinality of the feature while also making the feature usable without causing an explosion in the number of features after encoding. Ofcourse, the drawback is that some of the predictive power of the binned categories could be lost.&lt;/p&gt;
&lt;p&gt;Given the dearth of numerical features linearly related to the listing price, scraping new vehicle attributes from cars.com (for the same listings) could be pursued. Also, text attributes have not been used, such as a description of the vehicle. One could attempt to extract named entities or topics from this text and augment the exising data.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="end-to-end-ml-development-project" /><category term="web-scraping" /><category term="exploratory-data-analysis" /><category term="project" /><category term="machine-learning" /><summary type="html"></summary></entry></feed>